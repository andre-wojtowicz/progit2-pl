== Git i inne systemy

Świat nie jest idealny.
Zazwyczaj nie możesz od razu przejść w każdym projekcie na Gita.
Czasami utknąłeś w projekcie używającego innego systemu kontroli wersji i chciałbyś, żeby to był Git.
Pierwszą część tego rozdziału poświęcimy na poznanie sposobów używania Gita jako klienta, gdy projekt, nad którym pracujemy, znajduje się w innym systemie kontroli wersji.

W pewnym momencie, możesz chcieć przekonwertować swoje repozytorium do Gita.
Druga część tego rozdziału opisuje, jak zmigrować projekt do Gita z kilku konkretnych systemów, a także metodę, która sprawdzi się, jeśli nie istnieje żadne gotowe narzędzie do importu.

=== Git jako klient

(((Git as a client)))
Git zapewnia tak miłe doświadczenie dla programistów, że wiele osób odkryło jak używać go na swojej stacji roboczej, nawet jeśli reszta zespołu używa zupełnie innego systemu kontroli wersji.
Istnieje wiele takich adapterów, będących "pomostami" pomiędzy różnymi systemami.
Omówimy tutaj te, na które najprawdopodobniej natkniesz się podczas pracy.

include::sections/client-svn.asc[]

include::sections/client-hg.asc[]

include::sections/client-p4.asc[]

include::sections/client-tfs.asc[]

[[_migrating]]
=== Migracja do Gita

(((Migrating to Git)))
Jeżeli masz obecny kod projektu w innym systemie kontroli wersji, ale zdecydowałeś się na używanie Gita, musisz w jakiś sposób go zmigrować.
Ta sekcja przedstawia kilka importerów, które są dostarczane razem z Gitem dla najczęściej używanych systemów, a w dalszej części pokazuje jak stworzyć swój własny importer.

Dowiesz się, jak importować dane z kilku największych, profesjonalnie używanych systemów kontroli wersji, ponieważ stanowią one źródło większości użytkowników, którzy zmieniają system, a także dlatego, że Git posiada dla nich dopracowane narzędzia.

include::sections/import-svn.asc[]

include::sections/import-hg.asc[]

include::sections/import-p4.asc[]

include::sections/import-tfs.asc[]

include::sections/import-custom.asc[]

=== Podsumowanie

Powinieneś już czuć się komfortowo podczas używania Gita z Subversion, lub podczas importowania praktycznie każdego repozytorium do Gita, bez utraty danych.
Następny rozdział opisuje niskopoziomowe funkcje Gita, tak abyś mógł zmienić nawet każdy bajt, w razie gdybyś chciał.
